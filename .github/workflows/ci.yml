name: CI
on:
  push:
    branches:
      - '**'
    paths-ignore:
    - 'README.md'
    - '.gitignore'
  schedule:
    - cron: '1/10 * * * *' # 17h30 UTC+1 <==> 18h30 CET

jobs:
  Tests:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        include:
          - os: windows-latest
            venv-activate: .venv\Scripts\activate
            name: Windows
          - os: ubuntu-latest
            venv-activate: source .venv/bin/activate
            name: Linux

    runs-on: ${{ matrix.os }}
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3

      - name: Install virtualenv
        run: |
          python -m venv .venv
          ${{ matrix.venv-activate }}
          pip install -r requirements.txt
      - name: Run python unittest
        run: |
          ${{ matrix.venv-activate }}
          python -m unittest tests.py

  Package:
    needs: [Tests]
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        include:
          - os: windows-latest
            venv-activate: .venv\Scripts\activate
            name: Windows
            binary: dist/bera-dl.exe
          - os: ubuntu-latest
            venv-activate: source .venv/bin/activate
            name: Linux
            binary: dist/bera-dl
    runs-on: ${{ matrix.os }}
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3

      - name: Install virtualenv
        run: |
          python -m venv .venv
          ${{ matrix.venv-activate }}
          pip install -r requirements.txt
      - name: PyInstaller
        run: |
          ${{ matrix.venv-activate }}
          pyinstaller --onefile --name bera-dl --paths .venv/Lib/site-packages main.py
      - name: Binary artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.name }}-binary
          path: ${{ matrix.binary }}

  Release-binary-and-BERA:
    if: (github.ref_name == 'master') && ((contains(github.event.head_commit.message, '[release]')) || (github.event.schedule == '1/10 * * * *'))
    needs: [Package]
    runs-on: ubuntu-latest
    steps:
    - name: Download Windows binaries artifact
      uses: actions/download-artifact@v3
      with:
        name: Windows-binary
        path: binaries/windows

    - name: Download Linux binaries artifact
      uses: actions/download-artifact@v3
      with:
        name: Linux-binary
        path: binaries/linux
    - name: Create binary release
      uses: softprops/action-gh-release@v1
      with:
        name: Binary release
        tag_name: binary-release
        files: |
          binaries/linux/bera-dl
          binaries/windows/bera-dl.exe
        fail_on_unmatched_files: false
    - name: Download daily BERAs
      run: |
        chmod +x binaries/linux/bera-dl
        YEAR=$(date +'%Y')
        MONTH=$(date +'%m')
        DAY=$(date +'%d')
        binaries/linux/bera-dl ARRAVIS $YEAR $MONTH $DAY --output-name Arravis-${YEAR}-${MONTH}-${DAY}.pdf
        binaries/linux/bera-dl BELLEDONNE $YEAR $MONTH $DAY --output-name Belledonne-${YEAR}-${MONTH}-${DAY}.pdf
        binaries/linux/bera-dl CHARTREUSE $YEAR $MONTH $DAY --output-name Chartreuse-${YEAR}-${MONTH}-${DAY}.pdf
        binaries/linux/bera-dl OISANS $YEAR $MONTH $DAY --output-name Oisans-${YEAR}-${MONTH}-${DAY}.pdf
        binaries/linux/bera-dl VANOISE $YEAR $MONTH $DAY --output-name Vanoise-${YEAR}-${MONTH}-${DAY}.pdf
        binaries/linux/bera-dl VERCORS $YEAR $MONTH $DAY --output-name Vercors-${YEAR}-${MONTH}-${DAY}.pdf
    - name: Release Beras
      uses: softprops/action-gh-release@v1
      with:
        name: BERA release
        tag_name: bera-release
        files: |
          *.pdf
        fail_on_unmatched_files: false